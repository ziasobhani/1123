;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x1B ;PORTA
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0004 #endasm
;#include <lcd.h>
;#include<delay.h>
;void display_no(int no);
;void direction(char dir);
;void main(void)
; 0000 000A {

	.CSEG
;PCODE: $00000010 VOL: 0
; 0000 000B PORTA=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000C DDRA=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000D PORTB=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000E DDRB=0x08;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 000F PORTC=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0010 DDRC=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0011 PORTD=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0012 DDRD=0xFF;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0013 TCCR0=0x6A;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0014 TCNT0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0015 OCR0=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0016 MCUCR=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0017 MCUCSR=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0018 TIMSK=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0019 ACSR=0x80;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001A SFIOR=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001B lcd_init(16);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 001C PORTC=255;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 001D direction(3);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 001E while (1)
;PCODE: $00000037 VOL: 0
; 0000 001F       {
; 0000 0020       if (PINC.2==0 || PINC.3==0 || PINC.4==0 )
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0021       {
; 0000 0022           delay_ms(10);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0023           if (PINC.2==0)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0024                   direction(1);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0025           if (PINC.3==0)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0026                  direction(2);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0027           if (PINC.4==0)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0028                  direction(3);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0029 
; 0000 002A        }
;PCODE: $0000005A VOL: 0
; 0000 002B 
; 0000 002C       lcd_gotoxy(0,1);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002D       lcd_putsf("           ");
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 002E       lcd_gotoxy(0,1);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 002F       lcd_putsf("OCR0: ");
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0030       display_no(OCR0);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0031 
; 0000 0032       if (PINC.0==0 || PINC.1==0 )
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0033       {
; 0000 0034           delay_ms(10);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0035 
; 0000 0036           if (PINC.0==0)
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0037           {
; 0000 0038 
; 0000 0039               if (OCR0> 250)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 003A                   OCR0=255;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 003B               else
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 003C                   OCR0=OCR0+5;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 003D           }
;PCODE: $00000088 VOL: 0
; 0000 003E           else if (PINC.1==0)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 003F           {
; 0000 0040 
; 0000 0041                    if(OCR0<5)
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0042                       OCR0=0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0043                    else
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0044                       OCR0=OCR0-5;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0045           }
;PCODE: $00000098 VOL: 0
; 0000 0046        }
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0047        else
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0048        {
; 0000 0049 
; 0000 004A 
; 0000 004B        }
;PCODE: $0000009D VOL: 0
; 0000 004C 
; 0000 004D     }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 004E }
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;void direction(char dir)
; 0000 0050 {
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0051    switch(dir)
;PCODE: $000000A5 VOL: 0
;	dir -> Y+0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0052    {
; 0000 0053          case 1:
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0054          PORTD.0=0;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0055          PORTD.1=1;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0056          lcd_clear();
;PCODE: $000000AE VOL: 0
; 0000 0057          lcd_putsf("Direction: Left ");
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0058          break;
;PCODE: $000000B2 VOL: 0
; 0000 0059 
; 0000 005A          case 2:
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 005B          PORTD.0=1;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 005C          PORTD.1=0;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 005D          lcd_clear();
;PCODE: $000000BA VOL: 0
; 0000 005E          lcd_putsf("Direction: Right ");
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 005F          break;
;PCODE: $000000BE VOL: 0
; 0000 0060 
; 0000 0061          case 3:
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0062          PORTD.0=0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0063          PORTD.1=0;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0064          lcd_clear();
;PCODE: $000000C6 VOL: 0
; 0000 0065          lcd_putsf("Direction: Brake ");
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0066          break;
;PCODE: $000000CA VOL: 0
; 0000 0067    }
;PCODE: $000000CB VOL: 0
; 0000 0068 }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;void display_no(int no)
; 0000 006A {
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 006B    int array[5];
; 0000 006C    int i=0,j;
; 0000 006D    /*if( no < 0)
; 0000 006E    {
; 0000 006F       lcd_putchar('-');
; 0000 0070       no=-1*no;
; 0000 0071    }
; 0000 0072    else
; 0000 0073       lcd_putchar('+');*/
; 0000 0074     while(no > 9)
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;	no -> Y+14
;	array -> Y+4
;	i -> R16,R17
;	j -> R18,R19
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0075     {
; 0000 0076        array[i++]= no % 10;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0077        no/=10;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0078     }
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0079     array[i]=no;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 007A     for(j=i;j >=0 ;j--)
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 007B     {
; 0000 007C        lcd_putchar(48+array[j]);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 007D        delay_us(100);
;PCODE: $00000102 VOL: 0
; 0000 007E        }
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 007F 
; 0000 0080 }
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;
